"0","## Generating a UMAP and clusters
PBMCs <- PBMCs %>% 
         RunUMAP(reduction = ""harmony"", dims = 1:14) %>%
         FindNeighbors(reduction = ""harmony"", dims = 1:14) %>%
         FindClusters(resolution = .8)
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"1",""
"1","Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck"
"1","
"
"1","
"
"1","Number of nodes: 16946
"
"1","Number of edges: 588809
"
"1","
"
"1","Running "
"1","Louvain algorithm"
"1","..."
"1","
"
"2","0%   10   20   30   40   50   60   70   80   90   100%
"
"2","[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","|
"
"1","Maximum modularity in 10 random starts: 0.8822
"
"1","Number of communities: 20
"
"1","Elapsed time: 2 seconds
"
