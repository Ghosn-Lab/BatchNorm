"0","```r
FeatureScatter(TotalPT, 'adt_CoV2-N', 'adt_IgG', group.by = \"enriched_CDR3\", slot = \"counts\")   

###################################
### Biaxial plots for N antigen ###
###################################
TotalPT@meta.data$enriched_CDR3 <- rep('CDR3 < 5 copies')
TotalPT@meta.data[WhichCells(TotalPT, expression = `Lineage_Freq` >= 5), \"enriched_CDR3\"] <- 'CDR3 >= 5 copies'

Idents(TotalPT) <- TotalPT[['enriched_CDR3']]
enriched.cells <- WhichCells(TotalPT, expression = `Lineage_Freq` >= 5)
d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgG\", \"adt_CoV2-N\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgG\", \"adt_CoV2.N\")
p <- FeatureScatter(TotalPT, \"adt_IgG\", \"adt_CoV2-N\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-N (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_N_IgG.pdf\")

CDR3.enriched <- subset(TotalPT, cells = enriched.cells)
Idents(CDR3.enriched) <- CDR3.enriched[[\"orig.ident\"]]
p <- FeatureScatter(CDR3.enriched, \"adt_IgG\", \"adt_CoV2-N\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-N (ADT)\")  
p
ggsave(\"./Figures/Enriched_CDR3_N_IgG_orig.ident.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgM\", \"adt_CoV2-N\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgM\", \"adt_CoV2.N\")
p <- FeatureScatter(TotalPT, \"adt_IgM\", \"adt_CoV2-N\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgM (ADT)\", 
          y = \"CoV2-N (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_N_IgM.pdf\")

p <- FeatureScatter(CDR3.enriched, \"adt_IgM\", \"adt_CoV2-N\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgM (ADT)\",
         y = \"CoV2-N (ADT)\") 
p
ggsave(\"./Figures/Enriched_CDR3_N_IgM_orig.ident.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgA\", \"adt_CoV2-N\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgA\", \"adt_CoV2.N\")
p <- FeatureScatter(TotalPT, \"adt_IgA\", \"adt_CoV2-N\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgA (ADT)\", 
          y = \"CoV2-N (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_N_IgA.pdf\")

p <- FeatureScatter(CDR3.enriched, \"adt_IgA\", \"adt_CoV2-N\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgA (ADT)\",
         y = \"CoV2-N (ADT)\") 
p
ggsave(\"./Figures/Enriched_CDR3_N_IgA_orig.ident.pdf\")

# Gating
gated.cells <- WhichCells(TotalPT, expression = `adt_IgG` > 23 & `adt_CoV2-N` > 15 & `Lineage_Freq` >= 5)
TotalPT[[\"gated_cells\"]] <- TotalPT[['enriched_CDR3']]
TotalPT@meta.data[gated.cells, 'gated_cells'] <- \"gated\"
Idents(TotalPT) <- TotalPT[[\"gated_cells\"]]

d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgG\", \"adt_CoV2-N\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgG\", \"adt_CoV2.N\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgG\", \"adt_CoV2-N\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = colour)) +
     theme_gray() + 
     geom_polygon(data = data.frame(x = c(23, 60, 60, 23), 
                                    y = c(15, 15, 100, 100)),
                  aes(x = x, y = y, colour = \"gated\"), fill=NA) +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-N (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_N_IgG_Gate.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgM\", \"adt_CoV2-N\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgM\", \"adt_CoV2.N\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgM\", \"adt_CoV2-N\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1)  +
     geom_point(data = d[enriched.cells, ], aes(color = colour))+
     theme_gray() +
     labs(x = \"IgM (ADT)\", 
          y = \"CoV2-N (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_N_IgM_Gate.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgA\", \"adt_CoV2-N\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgA\", \"adt_CoV2.N\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgA\", \"adt_CoV2-N\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1)  +
     geom_point(data = d[enriched.cells, ], aes(color = colour))+
     theme_gray() +
     labs(x = \"IgA (ADT)\", 
          y = \"CoV2-N (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_N_IgA_Gate.pdf\")

DimPlot(TotalPT, cells.highlight = gated.cells, 
        cols = grey(0.7), cols.highlight = \"black\") +
        theme(legend.position = \"none\")
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_N_IgA_Gate_UMAP.pdf\")

#####################
### Repeat for S1 ###
#####################

Idents(TotalPT) <- TotalPT[['enriched_CDR3']]
enriched.cells <- WhichCells(TotalPT, expression = `Lineage_Freq` >= 5)
d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgG\", \"adt_CoV2-S1\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgG\", \"adt_CoV2.S1\")
p <- FeatureScatter(TotalPT, \"adt_IgG\", \"adt_CoV2-S1\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-S1 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S1_IgG.pdf\")

CDR3.enriched <- subset(TotalPT, cells = enriched.cells)
Idents(CDR3.enriched) <- CDR3.enriched[[\"orig.ident\"]]
p <- FeatureScatter(CDR3.enriched, \"adt_IgG\", \"adt_CoV2-S1\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-S1 (ADT)\")  
p
ggsave(\"./Figures/Enriched_CDR3_S1_IgG_orig.ident.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgM\", \"adt_CoV2-S1\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgM\", \"adt_CoV2.S1\")
p <- FeatureScatter(TotalPT, \"adt_IgM\", \"adt_CoV2-S1\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgM (ADT)\", 
          y = \"CoV2-S1 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S1_IgM.pdf\")

p <- FeatureScatter(CDR3.enriched, \"adt_IgM\", \"adt_CoV2-S1\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgM (ADT)\",
         y = \"CoV2-S1 (ADT)\") 
p
ggsave(\"./Figures/Enriched_CDR3_S1_IgM_orig.ident.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgA\", \"adt_CoV2-S1\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgA\", \"adt_CoV2.S1\")
p <- FeatureScatter(TotalPT, \"adt_IgA\", \"adt_CoV2-S1\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgA (ADT)\", 
          y = \"CoV2-S1 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S1_IgA.pdf\")

p <- FeatureScatter(CDR3.enriched, \"adt_IgA\", \"adt_CoV2-S1\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgA (ADT)\",
         y = \"CoV2-S1 (ADT)\") 
p
ggsave(\"./Figures/Enriched_CDR3_S1_IgA_orig.ident.pdf\")

# Gating
gated.cells <- WhichCells(TotalPT, expression = `adt_IgG` > 20 & `adt_CoV2-S1` > 20 & `Lineage_Freq` >= 5)
TotalPT[[\"gated_cells\"]] <- TotalPT[['enriched_CDR3']]
TotalPT@meta.data[gated.cells, 'gated_cells'] <- \"gated\"
Idents(TotalPT) <- TotalPT[[\"gated_cells\"]]

d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgG\", \"adt_CoV2-S1\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgG\", \"adt_CoV2.S1\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgG\", \"adt_CoV2-S1\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = colour)) +
     theme_gray() + 
     geom_polygon(data = data.frame(x = c(20, 60, 60, 20), 
                                    y = c(20, 20, 100, 100)),
                  aes(x = x, y = y, colour = \"gated\"), fill=NA) +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-S1 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S1_IgG_Gate.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgM\", \"adt_CoV2-S1\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgM\", \"adt_CoV2.S1\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgM\", \"adt_CoV2-S1\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1)  +
     geom_point(data = d[enriched.cells, ], aes(color = colour))+
     theme_gray() +
     labs(x = \"IgM (ADT)\", 
          y = \"CoV2-S1 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S1_IgM_Gate.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgA\", \"adt_CoV2-S1\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgA\", \"adt_CoV2.S1\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgA\", \"adt_CoV2-S1\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1)  +
     geom_point(data = d[enriched.cells, ], aes(color = colour))+
     theme_gray() +
     labs(x = \"IgA (ADT)\", 
          y = \"CoV2-S1 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S1_IgA_Gate.pdf\")

DimPlot(TotalPT, cells.highlight = gated.cells, 
        cols = grey(0.7), cols.highlight = \"black\") +
        theme(legend.position = \"none\")
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S1_IgA_Gate_UMAP.pdf\")

#####################
### Repeat for S2 ###
#####################

Idents(TotalPT) <- TotalPT[['enriched_CDR3']]
enriched.cells <- WhichCells(TotalPT, expression = `Lineage_Freq` >= 5)
d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgG\", \"adt_CoV2-S2\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgG\", \"adt_CoV2.S2\")
p <- FeatureScatter(TotalPT, \"adt_IgG\", \"adt_CoV2-S2\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-S2 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S2_IgG.pdf\")

CDR3.enriched <- subset(TotalPT, cells = enriched.cells)
Idents(CDR3.enriched) <- CDR3.enriched[[\"orig.ident\"]]
p <- FeatureScatter(CDR3.enriched, \"adt_IgG\", \"adt_CoV2-S2\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-S2 (ADT)\")  
p
ggsave(\"./Figures/Enriched_CDR3_S2_IgG_orig.ident.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgM\", \"adt_CoV2-S2\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgM\", \"adt_CoV2.S2\")
p <- FeatureScatter(TotalPT, \"adt_IgM\", \"adt_CoV2-S2\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgM (ADT)\", 
          y = \"CoV2-S2 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S2_IgM.pdf\")

p <- FeatureScatter(CDR3.enriched, \"adt_IgM\", \"adt_CoV2-S2\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgM (ADT)\",
         y = \"CoV2-S2 (ADT)\") 
p
ggsave(\"./Figures/Enriched_CDR3_S2_IgM_orig.ident.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgA\", \"adt_CoV2-S2\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgA\", \"adt_CoV2.S2\")
p <- FeatureScatter(TotalPT, \"adt_IgA\", \"adt_CoV2-S2\",
                    cols = colors.use, plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = 'CDR3 >= 5 copies')) +
     theme_gray() +
     labs(x = \"IgA (ADT)\", 
          y = \"CoV2-S2 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S2_IgA.pdf\")

p <- FeatureScatter(CDR3.enriched, \"adt_IgA\", \"adt_CoV2-S2\",
                    cols = colors.use, plot.cor = F) +
     theme_gray() +
     labs(x = \"IgA (ADT)\",
         y = \"CoV2-S2 (ADT)\") 
p
ggsave(\"./Figures/Enriched_CDR3_S2_IgA_orig.ident.pdf\")

# Gating
gated.cells <- WhichCells(TotalPT, expression = `adt_IgG` > 20 & `adt_CoV2-S2` > 20 & `Lineage_Freq` >= 5)
TotalPT[[\"gated_cells\"]] <- TotalPT[['enriched_CDR3']]
TotalPT@meta.data[gated.cells, 'gated_cells'] <- \"gated\"
Idents(TotalPT) <- TotalPT[[\"gated_cells\"]]

d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgG\", \"adt_CoV2-S2\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgG\", \"adt_CoV2.S2\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgG\", \"adt_CoV2-S2\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1) +
     geom_point(data = d[enriched.cells, ], aes(color = colour)) +
     theme_gray() + 
     geom_polygon(data = data.frame(x = c(20, 60, 60, 20), 
                                    y = c(20, 20, 100, 100)),
                  aes(x = x, y = y, colour = \"gated\"), fill=NA) +
     labs(x = \"IgG (ADT)\", 
          y = \"CoV2-S2 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S2_IgG_Gate.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgM\", \"adt_CoV2-S2\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgM\", \"adt_CoV2.S2\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgM\", \"adt_CoV2-S2\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1)  +
     geom_point(data = d[enriched.cells, ], aes(color = colour))+
     theme_gray() +
     labs(x = \"IgM (ADT)\", 
          y = \"CoV2-S2 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S2_IgM_Gate.pdf\")


d <- as.data.frame(FetchData(object = TotalPT, 
                   vars = c(\"adt_IgA\", \"adt_CoV2-S2\", \"gated_cells\")))
## Format colnames to match FeatureScatter syntax
colnames(d) <- c(\"adt_IgA\", \"adt_CoV2.S2\", 'colour')
p <- FeatureScatter(TotalPT, \"adt_IgA\", \"adt_CoV2-S2\",
                    cols = c(colors.use[1:2], \"black\"), plot.cor = F) +
     geom_density2d(data = d, color = \"black\", size = 1)  +
     geom_point(data = d[enriched.cells, ], aes(color = colour))+
     theme_gray() +
     labs(x = \"IgA (ADT)\", 
          y = \"CoV2-S2 (ADT)\")  + 
  theme(legend.position = \"none\")
p
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S2_IgA_Gate.pdf\")

DimPlot(TotalPT, cells.highlight = gated.cells, 
        cols = grey(0.7), cols.highlight = \"black\") +
        theme(legend.position = \"none\")
ggsave(\"./Figures/Drop27_TotalPT_CDR3_enriched_S2_IgA_Gate_UMAP.pdf\")

```"
